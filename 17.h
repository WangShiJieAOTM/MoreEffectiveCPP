/**
* 17.考虑使用延迟计算
*/
namespace seventeen {
    class String {
    };

    String s1 = "Hello";
    String s2 = s1; //在正常的情况下,这一句需要调用new操作符分配内存,然后调用strcpy将s1内的数据拷贝到s2里面
    //但是我们此时s2并没有并没有被使用,所以我们不需要s2,这个时候如果让s2和s1共享一个值,就可以减少这个开销

    //使用延时计算进行读操作和写操作

    String s = "Homer's Iliad";
    cout << s[3];
    s[3] = 'x';

    //延时表达式

    Matrix<int> m1(1000, 1000), m2(1000, 1000);
    m3 = m1 + m2;
    //因为矩阵加法的计算量很大,所以我们可以使用延时表达式,将m1 + m2的计算延迟到m3被使用的时候

    //延时计算:   在需要使用的时候才计算
}
